/* generated by 'bin/methodTemplateGenerate.js' */
import {getType} from '../utils';

type TArgvs = Array<any>;
type TStringCollect = Array<string>;

export function strings(...argvs: TArgvs): string {
    const stringCollect: TStringCollect = [];

    argvs.forEach(item => {
        const type = getType(item);

        switch (type) {
            case 'Array':
                const result = strings(...item);
                result && stringCollect.push(result);
                break;

            case 'Object':
                Object.entries(item).forEach(entry => {
                    const [key, value] = entry;
                    Boolean(value) && stringCollect.push(key);
                });
                break;
        
            default:
                const flag = Boolean(item);
                flag && stringCollect.push(String(item));
                break;
        }
    });

    return stringCollect.join('');
}

