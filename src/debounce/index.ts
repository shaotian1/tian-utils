/* generated by 'bin/methodTemplateGenerate.js' */
type Argvs = any[];
type Contex = null | object;
type Timer = null | ReturnType<typeof setTimeout>;
type Debounce = (fn: Function, delay?: number, ctx?: Contex) => (...argvs: Argvs) => void;

export const debounce: Debounce = (fn, delay = 300, ctx = null) => {
    let timer: Timer = null;

    return function(...argvs) {
        if (timer) {
            clearTimeout(timer);
            timer = null;
        }
        timer = setTimeout(function() {
            fn.apply(ctx, argvs);
        }, delay);
    }
};
